"""
Django settings for share_it project.

Generated by 'django-admin startproject' using Django 3.1.4.

For more information on this file, see
https://docs.djangoproject.com/en/3.1/topics/settings/

For the full list of settings and their values, see
https://docs.djangoproject.com/en/3.1/ref/settings/
"""

import os
from pathlib import Path

# Build paths inside the project like this: BASE_DIR / 'subdir'.
BASE_DIR = Path(__file__).resolve().parent.parent


# Quick-start development settings - unsuitable for production
# See https://docs.djangoproject.com/en/3.1/howto/deployment/checklist/

# SECURITY WARNING: keep the secret key used in production secret!
SECRET_KEY = os.environ.get("SECRET_KEY")

# SECURITY WARNING: don't run with debug turned on in production!
DEBUG = int(os.environ.get("DEBUG", default=0))

ALLOWED_HOSTS = os.environ.get("DJANGO_ALLOWED_HOSTS").split(" ")


# Application definition

INSTALLED_APPS = [
    "django.contrib.admin",
    "django.contrib.auth",
    "django.contrib.contenttypes",
    "django.contrib.sessions",
    "django.contrib.messages",
    "django.contrib.staticfiles",
    "django.contrib.sites",
    # django-allauth
    "allauth",
    "allauth.account",
    "allauth.socialaccount",
    "allauth.socialaccount.providers.facebook",
    "allauth.socialaccount.providers.github",
    "allauth.socialaccount.providers.google",
    # sass_processor
    "django_sass_compiler",
    # app
    "accounts",
]

MIDDLEWARE = [
    "django.middleware.security.SecurityMiddleware",
    "django.contrib.sessions.middleware.SessionMiddleware",
    "django.middleware.common.CommonMiddleware",
    "django.middleware.csrf.CsrfViewMiddleware",
    "django.contrib.auth.middleware.AuthenticationMiddleware",
    "django.contrib.messages.middleware.MessageMiddleware",
    "django.middleware.clickjacking.XFrameOptionsMiddleware",
]

ROOT_URLCONF = "share_it.urls"

TEMPLATES = [
    {
        "BACKEND": "django.template.backends.django.DjangoTemplates",
        "DIRS": [
            os.path.join(BASE_DIR, "accounts/templates"),
        ],
        "APP_DIRS": True,
        "OPTIONS": {
            "context_processors": [
                "django.template.context_processors.debug",
                "django.template.context_processors.request",
                "django.contrib.auth.context_processors.auth",
                "django.contrib.messages.context_processors.messages",
                "django.template.context_processors.request",
            ],
        },
    },
]

WSGI_APPLICATION = "share_it.wsgi.application"


# Database
# https://docs.djangoproject.com/en/3.1/ref/settings/#databases

DATABASES = {
    "default": {
        "ENGINE": os.environ.get("SQL_ENGINE", "django.db.backends.sqlite3"),
        "NAME": os.environ.get("SQL_DATABASE", os.path.join(BASE_DIR, "db.sqlite3")),
        "USER": os.environ.get("SQL_USER", "user"),
        "PASSWORD": os.environ.get("SQL_PASSWORD", "password"),
        "HOST": os.environ.get("SQL_HOST", "localhost"),
        "PORT": os.environ.get("SQL_PORT", "5432"),
    }
}


# Password validation
# https://docs.djangoproject.com/en/3.1/ref/settings/#auth-password-validators

AUTH_PASSWORD_VALIDATORS = [
    {
        "NAME": "django.contrib.auth.password_validation.UserAttributeSimilarityValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.MinimumLengthValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.CommonPasswordValidator",
    },
    {
        "NAME": "django.contrib.auth.password_validation.NumericPasswordValidator",
    },
]

AUTHENTICATION_BACKENDS = [
    "django.contrib.auth.backends.ModelBackend",
    "allauth.account.auth_backends.AuthenticationBackend",
]

# Internationalization
# https://docs.djangoproject.com/en/3.1/topics/i18n/

LANGUAGE_CODE = "en-us"

TIME_ZONE = "UTC"

USE_I18N = True

USE_L10N = True

USE_TZ = True


# Static files (CSS, JavaScript, Images)
# https://docs.djangoproject.com/en/3.1/howto/static-files/

STATIC_ROOT = os.path.join(BASE_DIR, "static")

STATIC_URL = "/static/"

SASS_COMPILER_NO_BUILD = True

SASS_COMPILER_MAP = True


# Mail
# https://docs.djangoproject.com/en/3.1/topics/email/

EMAIL_HOST = "smtp.mailtrap.io"
EMAIL_HOST_USER = os.environ.get("EMAIL_ID")
EMAIL_HOST_PASSWORD = os.environ.get("EMAIL_PASSWORD")
EMAIL_PORT = os.environ.get("EMAIL_PORT", "2525")

DEFAULT_FROM_EMAIL = os.environ.get("EMAIL_FROM_USER", "no-reply@mail.shareit.com")


# Django allauth settings
# https://django-allauth.readthedocs.io/en/latest/configuration.html

SITE_ID = 1

ACCOUNT_EMAIL_REQUIRED = True
ACCOUNT_CONFIRM_EMAIL_ON_GET = False
ACCOUNT_EMAIL_CONFIRMATION_HMAC = False
ACCOUNT_AUTHENTICATION_METHOD = "username_email"
ACCOUNT_EMAIL_CONFIRMATION_ANONYMOUS_REDIRECT_URL = os.environ.get("ACCOUNT_EMAIL_CONFIRM_ANONYMOUS_URL", "/")
ACCOUNT_EMAIL_CONFIRMATION_AUTHENTICATED_REDIRECT_URL = os.environ.get("ACCOUNT_EMAIL_CONFIRM_AUTHENTICATED_URL", "/")
ACCOUNT_EMAIL_CONFIRMATION_EXPIRE_DAYS = int(os.environ.get("ACCOUNT_EMAIL_CONFIRM_EXPIRE_DAYS", 3))
ACCOUNT_EMAIL_VERIFICATION = os.environ.get("ACCOUNT_EMAIL_VERIFICATION", "mandatory")
ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN = int(os.environ.get("ACCOUNT_EMAIL_CONFIRMATION_COOLDOWN", 180))
ACCOUNT_MAX_EMAIL_ADDRESSES = None

LOGIN_REDIRECT_URL = os.environ.get("LOGIN_REDIRECT_URL", "/")
ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT = int(os.environ.get("ACCOUNT_LOGIN_ATTEMPTS_TIMEOUT", 300))
ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION = int(os.environ.get("ACCOUNT_LOGIN_ON_EMAIL_CONFIRMATION", 0))
ACCOUNT_LOGIN_ATTEMPTS_LIMIT = int(os.environ.get("ACCOUNT_LOGIN_ATTEMPTS_LIMIT", 5))
ACCOUNT_LOGIN_ON_PASSWORD_RESET = int(os.environ.get("ACCOUNT_LOGIN_ON_PASSWORD_RESET", default=0))

ACCOUNT_LOGOUT_ON_GET = False
ACCOUNT_PRESERVE_USERNAME_CASING = False
ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE = int(os.environ.get("ACCOUNT_LOGOUT_ON_PASSWORD_CHANGE", default=0))
ACCOUNT_LOGOUT_REDIRECT_URL = os.environ.get("ACCOUNT_LOGOUT_REDIRECT_URL", "/")
ACCOUNT_PASSWORD_INPUT_RENDER_VALUE = False
ACCOUNT_SESSION_REMEMBER = None


ACCOUNT_SIGNUP_PASSWORD_ENTER_TWICE = True
ACCOUNT_SIGNUP_EMAIL_ENTER_TWICE = False
ACCOUNT_SIGNUP_REDIRECT_URL = os.environ.get("ACCOUNT_SIGNUP_REDIRECT_URL", "/")
ACCOUNT_SIGNUP_FORM_CLASS = None

ACCOUNT_UNIQUE_EMAIL = True
ACCOUNT_USERNAME_MIN_LENGTH = int(os.environ.get("ACCOUNT_USERNAME_MIN_LENGTH", 8))
ACCOUNT_USERNAME_REQUIRED = True
ACCOUNT_USERNAME_VALIDATORS = None

SOCIALACCOUNT_EMAIL_VERIFICATION = os.environ.get("SOCIALACCOUNT_EMAIL_VERIFICATION", "mandatory")
SOCIALACCOUNT_EMAIL_REQUIRED = True
SOCIALACCOUNT_QUERY_EMAIL = True
SOCIALACCOUNT_STORE_TOKENS = True
SOCIALACCOUNT_PROVIDERS = {
    "google": {
        "SCOPE": ["email", "profile"],
        "AUTH_PARAMS": {"access_type": "offline"},
    },
    "facebook": {
        "METHOD": "oauth2",
        "FIELDS": ["id", "first_name", "last_name", "middle_name", "name", "name_format", "picture", "short_name"],
        "SCOPE": ["email", "public_profile"],
        "VERIFIED_EMAIL": False,
        "VERSION": "v9.0",
    },
    "github": {
        "SCOPE": ["user:email", "read:user"],
    },
}
